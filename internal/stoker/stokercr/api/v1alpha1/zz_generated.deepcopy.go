//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Steamapp) DeepCopyInto(out *Steamapp) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Steamapp.
func (in *Steamapp) DeepCopy() *Steamapp {
	if in == nil {
		return nil
	}
	out := new(Steamapp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Steamapp) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SteamappList) DeepCopyInto(out *SteamappList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Steamapp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SteamappList.
func (in *SteamappList) DeepCopy() *SteamappList {
	if in == nil {
		return nil
	}
	out := new(SteamappList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SteamappList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SteamappSpec) DeepCopyInto(out *SteamappSpec) {
	*out = *in
	in.ImageOpts.DeepCopyInto(&out.ImageOpts)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SteamappSpec.
func (in *SteamappSpec) DeepCopy() *SteamappSpec {
	if in == nil {
		return nil
	}
	out := new(SteamappSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SteamappSpecImageOpts) DeepCopyInto(out *SteamappSpecImageOpts) {
	*out = *in
	if in.AptPkgs != nil {
		in, out := &in.AptPkgs, &out.AptPkgs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Execs != nil {
		in, out := &in.Execs, &out.Execs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Entrypoint != nil {
		in, out := &in.Entrypoint, &out.Entrypoint
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Cmd != nil {
		in, out := &in.Cmd, &out.Cmd
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SteamappSpecImageOpts.
func (in *SteamappSpecImageOpts) DeepCopy() *SteamappSpecImageOpts {
	if in == nil {
		return nil
	}
	out := new(SteamappSpecImageOpts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SteamappStatus) DeepCopyInto(out *SteamappStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SteamappStatus.
func (in *SteamappStatus) DeepCopy() *SteamappStatus {
	if in == nil {
		return nil
	}
	out := new(SteamappStatus)
	in.DeepCopyInto(out)
	return out
}
